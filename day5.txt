1.Recursive function to calculate the nth Fibonacci number

#include <stdio.h>
int fibonacci(int n) {
    if (n <= 1) {
        return n;
    }
    return fibonacci(n - 1) + fibonacci(n - 2);
}

int sumFibonacci(int n) {
    int sum = 0;
    for (int i = 0; i < n; i++) {
        sum += fibonacci(i);
    }
    return sum;
}

int main() {
    int n;
    printf("Enter the number of Fibonacci terms: ");
    scanf("%d", &n);

    printf("Fibonacci sequence: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", fibonacci(i));
    }

    int sum = sumFibonacci(n);
    printf("\nSum of first %d Fibonacci numbers: %d\n", n, sum);

    return 0;
}



2.Recursive function to calculate the sum of first 'n' natural numbers

#include <stdio.h>
int sum(int n) {
    if (n == 0) {
        return 0;  
    }
    return n + sum(n - 1);  
}

int main() {
    int n;
    printf("Enter a number: ");
    scanf("%d", &n);

    int result = sum(n);
    printf("Sum of first %d natural numbers: %d\n", n, result);

    return 0;
}
#include <stdio.h>

void findFrequency(int arr[], int size) {
    int freq[size];
    
    // Initialize frequency array with -1
    for (int i = 0; i < size; i++) {
        freq[i] = -1;
    }
    
    // Count frequencies
    for (int i = 0; i < size; i++) {
        int count = 1;
        for (int j = i + 1; j < size; j++) {
            if (arr[i] == arr[j]) {
                count++;
                // Mark duplicate elements as visited
                freq[j] = 0;
            }
        }
        if (freq[i] != 0) {
            freq[i] = count;
        }
    }
    
    // Display frequencies
    printf("Element | Frequency\n");
    for (int i = 0; i < size; i++) {
        if (freq[i] != 0) {
            printf("%d       | %d\n", arr[i], freq[i]);
        }
    }
}

int main() {
    int arr[] = {1, 2, 2, 3, 3, 3, 4, 4, 4, 4};
    int size = sizeof(arr) / sizeof(arr[0]);

    findFrequency(arr, size);

    return 0;
}